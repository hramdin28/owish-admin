{"remainingRequest":"/Users/hanishramdin/Documents/vue-workspace/owish/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hanishramdin/Documents/vue-workspace/owish/src/components/WishList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hanishramdin/Documents/vue-workspace/owish/src/components/WishList.vue","mtime":1576513812189},{"path":"/Users/hanishramdin/Documents/vue-workspace/owish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hanishramdin/Documents/vue-workspace/owish/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hanishramdin/Documents/vue-workspace/owish/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hanishramdin/Documents/vue-workspace/owish/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAiYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5jc3MiOwppbXBvcnQgImJvb3RzdHJhcC12dWUvZGlzdC9ib290c3RyYXAtdnVlLmNzcyI7CgppbXBvcnQgU29ja0pTIGZyb20gInNvY2tqcy1jbGllbnQiOwppbXBvcnQgU3RvbXAgZnJvbSAid2Vic3RvbXAtY2xpZW50IjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAid2Vic29ja2V0ZGVtbyIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlY2VpdmVkX21lc3NhZ2VzOiBbXSwKICAgICAgc2VuZF9tZXNzYWdlOiBudWxsLAogICAgICBjb25uZWN0ZWQ6IGZhbHNlLAogICAgICBwYWdlOiAtMQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YSgpIHsKICAgICAgdGhpcy5wYWdlKys7CiAgICAgIGF4aW9zKHsKICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgIHVybDoKICAgICAgICAgIHByb2Nlc3MuZW52LlZVRV9BUFBfQkFDS0VORF9IT1NUICsKICAgICAgICAgICJmZXRjaEFsbEJ5UGFnZU51bWJlcj9wYWdlTnVtYmVyPSIgKwogICAgICAgICAgdGhpcy5wYWdlCiAgICAgIH0pLnRoZW4oCiAgICAgICAgcmVzdWx0ID0+IHsKICAgICAgICAgIHRoaXMucmVjZWl2ZWRfbWVzc2FnZXMucHVzaCguLi5BcnJheS5mcm9tKG5ldyBTZXQocmVzdWx0LmRhdGEpKSk7CiAgICAgICAgfSwKICAgICAgICBlcnJvciA9PiB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfQogICAgICApOwogICAgfSwKICAgIGNvbm5lY3QoKSB7CiAgICAgIHRoaXMuc29ja2V0ID0gbmV3IFNvY2tKUygKICAgICAgICBwcm9jZXNzLmVudi5WVUVfQVBQX0JBQ0tFTkRfSE9TVCArIHByb2Nlc3MuZW52LlZVRV9BUFBfU09DS0VUX0VORFBPSU5UCiAgICAgICk7CiAgICAgIHRoaXMuc3RvbXBDbGllbnQgPSBTdG9tcC5vdmVyKHRoaXMuc29ja2V0KTsKICAgICAgdGhpcy5zdG9tcENsaWVudC5jb25uZWN0KAogICAgICAgIHt9LAogICAgICAgIGZyYW1lID0+IHsKICAgICAgICAgIHRoaXMuY29ubmVjdGVkID0gdHJ1ZTsKICAgICAgICAgIHRoaXMuc3RvbXBDbGllbnQuc3Vic2NyaWJlKCIvdG9waWMvd2lzaGVzLyIsIHRpY2sgPT4gewogICAgICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UodGljay5ib2R5KTsKICAgICAgICAgICAgaWYgKCJBREQiID09PSBkYXRhLnR5cGUpIHsKICAgICAgICAgICAgICBpZiAoIXRoaXMucmVjZWl2ZWRfbWVzc2FnZXMuZmluZCh4ID0+IHguaWQgPT09IGRhdGEud2lzaER0by5pZCkpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVjZWl2ZWRfbWVzc2FnZXMuc3BsaWNlKDAsIDAsIGRhdGEud2lzaER0byk7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWNlaXZlZF9tZXNzYWdlcy5sZW5ndGggPiAxMCAqICh0aGlzLnBhZ2UgKyAxKSkgewogICAgICAgICAgICAgICAgICB0aGlzLnJlY2VpdmVkX21lc3NhZ2VzLnNwbGljZSgxMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGlmICh0aGlzLnJlY2VpdmVkX21lc3NhZ2VzLmZpbmQoeCA9PiB4LmlkID09PSBkYXRhLndpc2hEdG8uaWQpKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJlY2VpdmVkX21lc3NhZ2VzLnNwbGljZSgKICAgICAgICAgICAgICAgICAgdGhpcy5yZWNlaXZlZF9tZXNzYWdlcy5maW5kSW5kZXgoCiAgICAgICAgICAgICAgICAgICAgeCA9PiB4LmlkID09PSBkYXRhLndpc2hEdG8uaWQKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy90aGlzLnJlY2VpdmVkX21lc3NhZ2VzLnB1c2goSlNPTi5wYXJzZSh0aWNrLmJvZHkpLmNvbnRlbnQpOwogICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBlcnJvciA9PiB7CiAgICAgICAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgKTsKICAgIH0sCiAgICBkaXNjb25uZWN0KCkgewogICAgICBpZiAodGhpcy5zdG9tcENsaWVudCkgewogICAgICAgIHRoaXMuc3RvbXBDbGllbnQuZGlzY29ubmVjdCgpOwogICAgICB9CiAgICAgIHRoaXMuY29ubmVjdGVkID0gZmFsc2U7CiAgICB9LAogICAgdGlja2xlQ29ubmVjdGlvbigpIHsKICAgICAgdGhpcy5jb25uZWN0ZWQgPyB0aGlzLmRpc2Nvbm5lY3QoKSA6IHRoaXMuY29ubmVjdCgpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlCiAgICBjb25zb2xlLmVycm9yKHByb2Nlc3MuZW52KTsKICAgIHRoaXMuY29ubmVjdCgpOwogICAgdGhpcy5mZXRjaERhdGEoKTsKICB9Cn07Cg=="},{"version":3,"sources":["WishList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WishList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div id=\"main-content\" class=\"container\">\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"message in this.received_messages\"\n          :key=\"message.id\"\n        >{{message.name}}</b-list-group-item>\n      </b-list-group>\n      <br>\n      <b-button squared variant=\"info\" v-on:click=\"fetchData\">More</b-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"websocketdemo\",\n  data() {\n    return {\n      received_messages: [],\n      send_message: null,\n      connected: false,\n      page: -1\n    };\n  },\n  methods: {\n    fetchData() {\n      this.page++;\n      axios({\n        method: \"GET\",\n        url:\n          process.env.VUE_APP_BACKEND_HOST +\n          \"fetchAllByPageNumber?pageNumber=\" +\n          this.page\n      }).then(\n        result => {\n          this.received_messages.push(...Array.from(new Set(result.data)));\n        },\n        error => {\n          // eslint-disable-next-line no-console\n          console.error(error);\n        }\n      );\n    },\n    connect() {\n      this.socket = new SockJS(\n        process.env.VUE_APP_BACKEND_HOST + process.env.VUE_APP_SOCKET_ENDPOINT\n      );\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect(\n        {},\n        frame => {\n          this.connected = true;\n          this.stompClient.subscribe(\"/topic/wishes/\", tick => {\n            let data = JSON.parse(tick.body);\n            if (\"ADD\" === data.type) {\n              if (!this.received_messages.find(x => x.id === data.wishDto.id)) {\n                this.received_messages.splice(0, 0, data.wishDto);\n                if (this.received_messages.length > 10 * (this.page + 1)) {\n                  this.received_messages.splice(10);\n                }\n              }\n            } else {\n              if (this.received_messages.find(x => x.id === data.wishDto.id)) {\n                this.received_messages.splice(\n                  this.received_messages.findIndex(\n                    x => x.id === data.wishDto.id\n                  ),\n                  1\n                );\n              }\n            }\n            //this.received_messages.push(JSON.parse(tick.body).content);\n          });\n        },\n        error => {\n          this.connected = false;\n        }\n      );\n    },\n    disconnect() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n      }\n      this.connected = false;\n    },\n    tickleConnection() {\n      this.connected ? this.disconnect() : this.connect();\n    }\n  },\n  mounted() {\n    // eslint-disable-next-line no-console\n    console.error(process.env);\n    this.connect();\n    this.fetchData();\n  }\n};\n</script>\n\n\n"]}]}